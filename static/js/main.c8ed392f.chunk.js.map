{"version":3,"sources":["components/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","msg","this","props","quote","author","console","log","twitterHref","className","href","target","onClick","newQuote","Component","App","state","quotes","bind","fetch","then","res","json","setState","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEqBA,G,6KAGb,IAAMC,EAAO,IAAMC,KAAKC,MAAMC,MAAMA,MAAQ,MAAMF,KAAKC,MAAMC,MAAMC,OACnEC,QAAQC,IAAIN,GACZ,IAAMO,EAAc,wCAA0CP,EAC9D,OACI,sBAAKQ,UAAY,uBAAjB,UACI,sBAAKA,UAAY,QAAjB,UACI,mBAAGA,UAAU,qBACZP,KAAKC,MAAMC,MAAMA,MAClB,mBAAGK,UAAU,yBAEjB,sBAAKA,UAAY,SAAjB,cAEKP,KAAKC,MAAMC,MAAMC,UAEtB,sBAAKI,UAAY,UAAjB,UACI,qBAAKA,UAAW,eAAhB,SACA,mBAAGC,KAAMF,EAAaG,OAAO,SAA7B,SAAsC,mBAAGF,UAAU,6BAEnD,qBAAKA,UAAY,YAAjB,SACI,wBAAQG,QAAWV,KAAKC,MAAMU,SAA9B,mC,GAtBWC,cCyCpBC,E,kDAtCb,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IACDa,MAAO,CACVC,OAAO,GACPb,MAAM,IAER,EAAKS,SAAW,EAAKA,SAASK,KAAd,gBANA,E,gEAQE,IAAD,OACjBC,MAAM,0IACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAH,GACJ,EAAKM,SAAS,CACZN,OAAOA,EAAOA,OACdb,MAAOa,EAAOA,OAAOO,KAAKC,MAAMD,KAAKE,SAAWT,EAAOA,OAAOU,gB,iCAMlEzB,KAAKqB,SACH,CACEnB,MAAOF,KAAKc,MAAMC,OAAOO,KAAKC,MAAMD,KAAKE,SAAWxB,KAAKc,MAAMC,OAAOU,a,+BAM1E,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,CAAOL,MAAQF,KAAKc,MAAMZ,MAAOS,SAAWX,KAAKW,iB,GA/BvCC,aCQHc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c8ed392f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Quote extends Component {\r\n    \r\n    render() {\r\n        const msg =  '\"' + this.props.quote.quote + '\" -'+this.props.quote.author;\r\n        console.log(msg);\r\n        const twitterHref = \"http://twitter.com/intent/tweet?text=\" + msg;// \r\n        return (\r\n            <div className = \"quote-main-container\">\r\n                <div className = \"quote\">\r\n                    <i className=\"fa fa-quote-left\"></i>\r\n                    {this.props.quote.quote}\r\n                    <i className=\"fa fa-quote-right\"></i>\r\n                </div>\r\n                <div className = \"author\">\r\n                    -\r\n                    {this.props.quote.author}\r\n                </div>\r\n                <div className = \"buttons\">\r\n                    <div className =\"social-media\">\r\n                    <a href={twitterHref} target=\"_blank\"><i className=\"fa fa-twitter-square\"></i></a>\r\n                    </div>\r\n                    <div className = \"new-quote\">\r\n                        <button onClick = {this.props.newQuote}>\r\n                            New Quote\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Quote from './components/Quote';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      quotes:[],\n      quote:{}\n    }\n    this.newQuote = this.newQuote.bind(this)\n  }\n  componentDidMount(){\n    fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    .then(res=>res.json())\n    .then(quotes=>{\n      this.setState({\n        quotes:quotes.quotes,\n        quote: quotes.quotes[Math.floor(Math.random() * quotes.quotes.length)]\n      })\n    });\n  }\n  newQuote(){\n    // console.log(this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)])\n    this.setState(\n      {\n        quote: this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)]\n      }\n    )\n  }\n\n  render (){\n    return (\n      <div className=\"App\">\n        <Quote quote ={this.state.quote} newQuote ={this.newQuote}/>\n  \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}